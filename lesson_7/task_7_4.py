# 4. Написать скрипт, который для заданной папки выводит статистику размеров файлов
# Формат вывода результата:
# {
#   100: 15,
#   1000: 3,
#   10000: 7,
#   100000: 2
# }
#
# Тут 15 файлов размером не более 100 байт; 3 файла больше 100 и не больше 1000 байт;
#
# Техническое задание
#
# Директорию с файлами some_data можно скачать из прикрепленных к уроку файлов.
# Результат возвращается в виде словаря
# ключи — верхняя граница размера файла (пусть будет кратна 10)
# значения — общее количество файлов (в том числе и в подпапках), размер которых не превышает этой границы,
# но больше предыдущей (начинаем с 0)
# Программа должна легко модифицироваться под другие границы диапазонов или увеличение их количества.
# Примечание:
#
# размер файла можно получить из атрибута .st_size объекта os.stat.

from pathlib import Path

find_dir = Path('task_2', 'some_data')
min_byte = 0
mid_byte = 0
max_byte = 0
large = 0
dict_out = {}
for dept in find_dir.glob('**/*.*'):
    dir = Path('.', '/'.join(dept.parts))
    if dir.is_file() and dir.stat().st_size < 100:
        min_byte += 1
        dict_out[100] = min_byte
    if dir.is_file() and 1000 > dir.stat().st_size > 100:
        mid_byte += 1
        dict_out[1000] = mid_byte
    if dir.is_file() and 10000 > dir.stat().st_size > 1000:
        max_byte += 1
        dict_out[10000] = max_byte
    if dir.is_file() and dir.stat().st_size > 10000:
        large += 1
        dict_out[100000] = large
print(dict_out)

